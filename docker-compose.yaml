services:
  warm_home_hvac:
    image: warm_home:latest
    container_name: warm_home_hvac
    ports:
      - '8080:8080'
    networks:
      - warm_home
    environment:
      APP_PORT: 8080
      DB_USER: hvac_user
      DB_PASS: hvac_password
      DB_HOST: postgres_hvac
      DB_PORT: 5432
      DB_NAME: warm_home_hvac
    depends_on:
      - postgres_hvac
    healthcheck:
          test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:8080/ || exit 1"]
          interval: 10s
          timeout: 5s
          retries: 5
          start_period: 10s

  warm_home_light:
    image: warm_home:latest
    container_name: warm_home_light
    ports:
      - '8081:8080'
    networks:
      - warm_home
    environment:
      APP_PORT: 8080
      DB_USER: light_user
      DB_PASS: light_password
      DB_HOST: postgres_light
      DB_PORT: 5432
      DB_NAME: warm_home_light
    depends_on:
      - postgres_light
    healthcheck:
          test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:8080/ || exit 1"]
          interval: 10s
          timeout: 5s
          retries: 5
          start_period: 10s

  broker:
    image: apache/kafka:latest
    container_name: broker
    ports:
      - '9092:9092'
      - '29092:29092'
    networks:
      - warm_home
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://broker:29092,CONTROLLER://broker:29093,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:29093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
#      KAFKA_CLIENT_USERS: user
#      KAFKA_CLIENT_PASSWORDS: password
    healthcheck:
          test: ["CMD-SHELL", "nc -z localhost 9092 || exit 1"]
          interval: 10s
          timeout: 5s
          retries: 5
          start_period: 10s

  postgres_hvac:
    image: postgres:alpine
    container_name: postgres_hvac
    environment:
      POSTGRES_DB: warm_home_hvac
      POSTGRES_USER: hvac_user
      POSTGRES_PASSWORD: hvac_password
      PGDATA: "/var/lib/postgresql/data/pgdata"
    ports:
      - "5432:5432"
    networks:
      - warm_home
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hvac_user -d warm_home_hvac"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    volumes:
      - hvac_data:/var/lib/postgresql/data

  postgres_light:
    image: postgres:alpine
    container_name: postgres_light
    environment:
      POSTGRES_DB: warm_home_light
      POSTGRES_USER: light_user
      POSTGRES_PASSWORD: light_password
      PGDATA: "/var/lib/postgresql/data/pgdata"
    ports:
      - "5433:5432"
    networks:
      - warm_home
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U light_user -d warm_home_light"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    volumes:
      - light_data:/var/lib/postgresql/data

networks:
  warm_home:
    driver: bridge

volumes:
  hvac_data:
  light_data:
